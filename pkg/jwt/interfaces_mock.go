// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package jwt is a generated GoMock package.
package jwt

import (
	jwt "github.com/dgrijalva/jwt-go"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIVerifier is a mock of IVerifier interface
type MockIVerifier struct {
	ctrl     *gomock.Controller
	recorder *MockIVerifierMockRecorder
}

// MockIVerifierMockRecorder is the mock recorder for MockIVerifier
type MockIVerifierMockRecorder struct {
	mock *MockIVerifier
}

// NewMockIVerifier creates a new mock instance
func NewMockIVerifier(ctrl *gomock.Controller) *MockIVerifier {
	mock := &MockIVerifier{ctrl: ctrl}
	mock.recorder = &MockIVerifierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIVerifier) EXPECT() *MockIVerifierMockRecorder {
	return m.recorder
}

// Verify mocks base method
func (m *MockIVerifier) Verify(arg0 string, arg1 jwt.Claims) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Verify", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Verify indicates an expected call of Verify
func (mr *MockIVerifierMockRecorder) Verify(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Verify", reflect.TypeOf((*MockIVerifier)(nil).Verify), arg0, arg1)
}
